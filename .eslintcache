[{"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\App.js":"1","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\index.js":"2","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Nav.js":"3","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Register.js":"4","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Footer.js":"5","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Posts.js":"6","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\CreatePost.js":"7","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Post.js":"8","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\EditPost.js":"9","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\context\\UserContext.js":"10","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Login.js":"11","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\ErrorNotice.js":"12","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\ForgotPassword.js":"13","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\MyProfile.js":"14"},{"size":2516,"mtime":1607173994761,"results":"15","hashOfConfig":"16"},{"size":175,"mtime":1606603409617,"results":"17","hashOfConfig":"16"},{"size":1780,"mtime":1607066332865,"results":"18","hashOfConfig":"16"},{"size":3987,"mtime":1607108113791,"results":"19","hashOfConfig":"16"},{"size":154,"mtime":1606603604966,"results":"20","hashOfConfig":"16"},{"size":1135,"mtime":1607080042932,"results":"21","hashOfConfig":"16"},{"size":1976,"mtime":1607086940362,"results":"22","hashOfConfig":"16"},{"size":744,"mtime":1607173994815,"results":"23","hashOfConfig":"16"},{"size":2364,"mtime":1607087525567,"results":"24","hashOfConfig":"16"},{"size":79,"mtime":1606923826191,"results":"25","hashOfConfig":"16"},{"size":3312,"mtime":1607079341680,"results":"26","hashOfConfig":"16"},{"size":270,"mtime":1606928392996,"results":"27","hashOfConfig":"16"},{"size":2292,"mtime":1607079297757,"results":"28","hashOfConfig":"16"},{"size":175,"mtime":1607066431729,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1d9bdiu",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":3,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":6,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":9,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\App.js",["65","66","67","68","69","70","71","72"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\index.js",[],["73","74"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Nav.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Register.js",["75","76","77","78","79","80","81"],"import React, {useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\"\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues = {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n}\r\n\r\n\r\n\r\nconst onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n        try {\r\n            const email = initialValues.email\r\n            const password = initialValues.password\r\n            const username = initialValues.username\r\n\r\n            const newUser = {email, password, username};\r\n\r\n        await Axios.post(\r\n            \"http://localhost:8080/api/register\", \r\n            newUser\r\n            );\r\n        const loginRes = await Axios.post(\"http://localhost:8080/api/login\",{\r\n            email,\r\n            username,\r\n            password,\r\n        });\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user,\r\n            });\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        }\r\n        catch (err) {\r\n            err.response.data.error && setError(err.response.data.error);\r\n}\r\n\r\n}\r\n\r\nconst regEx = /^(?=.*[A-Z])(?=.*\\d)(?=.{8,})/\r\n\r\n\r\n\r\nconst validationSchema = Yup.object({ \r\n\r\n    username: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format.')\r\n        .required('Required'),\r\n\r\n    \r\n    password: Yup.string()\r\n        .required('Required!')\r\n        .matches(\r\n            regEx,\r\n            'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\r\n        )\r\n        .min(8)\r\n})\r\n\r\nfunction Register() {\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n/*\r\n    const submit = async (e) => {\r\n        \r\n        }\r\n        };\r\n\r\n        */\r\n\r\n        return( \r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit} >\r\n                <Form className=\"register-form\" >\r\n                        <h2>Register</h2>\r\n\r\n                        <div className=\"form-control\">\r\n                        <label htmlFor=\"username\" >Username:</label>\r\n                        <Field  \r\n                            \r\n                            className=\"register-username\" \r\n                            type=\"text\" \r\n                            id=\"username\" \r\n                            name=\"username\"\r\n\r\n                        />\r\n                        <ErrorMessage name=\"username\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <Field  \r\n\r\n                            className=\"register-email\" \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\"\r\n                        />\r\n                        <ErrorMessage name=\"email\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Field \r\n\r\n                            className=\"register-password\" \r\n                            type=\"password\" \r\n                            id=\"password\" \r\n                            name=\"password\"\r\n                        />                      \r\n                        <ErrorMessage name=\"password\" />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"register-btn\">Submit</button>\r\n\r\n\r\n                </Form>\r\n                </Formik>\r\n        )\r\n        };\r\n    \r\n\r\n\r\n\r\nexport default Register;","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Posts.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\CreatePost.js",["82","83","84","85","86","87","88","89"],"import React, {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    blogTitle: Yup.string()\r\n            .required('Required.'),\r\n    blogText: Yup.string()\r\n            .required('Required.'),\r\n    authorName: Yup.string()\r\n            .required('Required')\r\n});\r\n\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form data', values)\r\n}\r\n\r\n\r\nconst CreatePost = () => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const changeOnClick = e => {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            blogTitle,\r\n            blogText,\r\n            authorName   \r\n        };\r\n\r\n        setBlogTitle(\"\");\r\n        setBlogText(\"\");\r\n        setAuthorName(\"\");\r\n\r\n        Axios.post('http://localhost:8080/api/posts', post)\r\n        .then(res => setMessage(res.data))\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n\r\n    const initialValues = {\r\n        blogTitle: '',\r\n        blogText: '',\r\n        authorName: ''\r\n    }\r\n\r\n    return (\r\n        <Formik \r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}>\r\n    <Form encType=\"multipart/form-data\" className=\"create-post-form\">\r\n        <h2>Create Post</h2>\r\n\r\n        <label htmlFor=\"blogTitle\">Blog Title:</label>\r\n        <Field type=\"text\" id=\"blogTitle\" name=\"blogTitle\" />\r\n        <ErrorMessage name=\"blogTitle\" />\r\n\r\n        <label htmlFor=\"blogText\">Blog Text:</label>\r\n        <Field type=\"text\" id=\"blogText\" name=\"blogText\" />\r\n        <ErrorMessage name=\"blogText\" />\r\n\r\n        <label htmlFor=\"authorname\">Author Name:</label>\r\n        <Field type=\"text\" id=\"authorName\" name=\"authorName\" />\r\n        <ErrorMessage name=\"authorName\" />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </Form>\r\n    </Formik>\r\n)\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Post.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\EditPost.js",["90","91","92","93","94","95","96","97","98","99"],"import React, {useState, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, ErrorMessage, Field } from \"formik\"; \r\nimport * as Yup from \"yup\";\r\n\r\nconst EditPost = props => {\r\n\r\n    const initialValues = {\r\n        blogTitle: '',\r\n        blogText: '',\r\n        authorName: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        blogTitle: Yup.string() \r\n                    .required('Required'),\r\n        blogText: Yup.string()\r\n                    .required('Required'),\r\n        authorName: Yup.string()\r\n                    .required('Required')\r\n    })\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            blogTitle,\r\n            blogText,\r\n            authorName   \r\n        };\r\n\r\n        setBlogTitle(\"\");\r\n        setBlogText(\"\");\r\n        setAuthorName(\"\");\r\n\r\n        Axios.put(`http://localhost:8080/api/posts/${props.match.params.id}`, post)\r\n            .then(res => setMessage(res.data))\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8080/api/posts/${props.match.params.id}`)\r\n        .then(res => [\r\n            setBlogTitle(res.data.blogTitle),\r\n            setBlogText(res.data.blogText),\r\n            setAuthorName(res.data.authorName)\r\n        ])\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n\r\n    return (\r\n    <Formik \r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit} >\r\n\r\n    <Form encType=\"multipart/form-data\" className=\"edit-post-form\">\r\n        <h2>Edit Post</h2>\r\n        <span className=\"message-edit\">{message}</span>\r\n        <label htmlFor=\"blogTitle\">Blog Title:</label>\r\n        <Field type=\"text\" id=\"blogTitle\" name=\"blogTitle\" />\r\n        <ErrorMessage name=\"blogTitle\" />\r\n\r\n        <label htmlFor=\"blogText\">Blog Text:</label>\r\n        <Field type=\"text\" id=\"blogText\" name=\"blogText\" />\r\n        <ErrorMessage name=\"blogText\" />\r\n\r\n        <label htmlFor=\"authorName\">Author Name:</label>\r\n        <Field type=\"text\" id=\"authorName\" name=\"authorName\" />\r\n        <ErrorMessage name=\"authorName\" />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </Form>\r\n    </Formik>\r\n)\r\n}\r\n\r\nexport default EditPost;","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\context\\UserContext.js",[],["100","101"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Login.js",["102","103","104","105","106","107","108","109"],"import React, {useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\"\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues = {\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form data', values)\r\n\r\n    } \r\n\r\n    /* \r\n    e.preventDefault();\r\n\r\n    try {\r\n    const loginUser = {email, password};\r\n\r\n    const loginRes = Axios.post(\r\n        \"http://localhost:8080/api/login\", \r\n        loginUser\r\n        );\r\n        setUserData({\r\n            token: loginRes.data.token,\r\n            user: loginRes.data.user,\r\n        });\r\n        localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n        history.push(\"/\");\r\n    } catch (err) {\r\n        err.response.data.error && setError(err.response.data.error);\r\n\r\n    }*/\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required!'),\r\n    password: Yup.string()\r\n        .required('Required!')\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n            'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\r\n        )\r\n\r\n})\r\n\r\n\r\nfunction Login() {\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    \r\n    /*\r\n    const submit = async (e) => {\r\n    \r\n        */\r\n    \r\n\r\n        return(  \r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}>\r\n                <Form className=\"login-form\" >\r\n                        <h2>Login</h2>\r\n            \r\n                        <div className=\"form-control\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <Field \r\n                            className=\"login-email\" \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\">    \r\n                        </Field>\r\n                        <ErrorMessage name=\"email\" />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-control\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Field \r\n                            className=\"login-password\" \r\n                            type=\"password\" \r\n                            id=\"password\" \r\n                            name=\"password\">\r\n                        </Field>\r\n                        <ErrorMessage name=\"password\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                        <button type=\"submit\" className=\"login-btn\">Submit</button>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                        <Link to=\"/forgot-password\">Forgot your password? Click here.</Link>\r\n                        </div>\r\n                </Form>\r\n                </Formik>\r\n\r\n        )\r\n        };\r\n    \r\n\r\nexport default Login;",["110","111"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\ForgotPassword.js",["112","113","114","115","116","117"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\MyProfile.js",[],{"ruleId":"118","severity":1,"message":"119","line":65,"column":34,"nodeType":"120","endLine":65,"endColumn":39},{"ruleId":"118","severity":1,"message":"119","line":66,"column":42,"nodeType":"120","endLine":66,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":67,"column":47,"nodeType":"120","endLine":67,"endColumn":52},{"ruleId":"118","severity":1,"message":"119","line":68,"column":45,"nodeType":"120","endLine":68,"endColumn":50},{"ruleId":"118","severity":1,"message":"119","line":69,"column":42,"nodeType":"120","endLine":69,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":70,"column":39,"nodeType":"120","endLine":70,"endColumn":44},{"ruleId":"118","severity":1,"message":"119","line":71,"column":43,"nodeType":"120","endLine":71,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":72,"column":48,"nodeType":"120","endLine":72,"endColumn":53},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"129","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":19},{"ruleId":"130","severity":2,"message":"131","line":37,"column":13,"nodeType":"127","messageId":"132","endLine":37,"endColumn":24},{"ruleId":"133","severity":2,"message":"134","line":42,"column":13,"nodeType":"127","messageId":"135","endLine":42,"endColumn":20},{"ruleId":"130","severity":2,"message":"136","line":45,"column":40,"nodeType":"127","messageId":"132","endLine":45,"endColumn":48},{"ruleId":"125","severity":1,"message":"137","line":73,"column":13,"nodeType":"127","messageId":"128","endLine":73,"endColumn":24},{"ruleId":"125","severity":1,"message":"138","line":74,"column":11,"nodeType":"127","messageId":"128","endLine":74,"endColumn":18},{"ruleId":"125","severity":1,"message":"139","line":23,"column":12,"nodeType":"127","messageId":"128","endLine":23,"endColumn":19},{"ruleId":"125","severity":1,"message":"140","line":25,"column":11,"nodeType":"127","messageId":"128","endLine":25,"endColumn":24},{"ruleId":"130","severity":2,"message":"141","line":29,"column":13,"nodeType":"127","messageId":"132","endLine":29,"endColumn":22},{"ruleId":"130","severity":2,"message":"142","line":30,"column":13,"nodeType":"127","messageId":"132","endLine":30,"endColumn":21},{"ruleId":"130","severity":2,"message":"143","line":31,"column":13,"nodeType":"127","messageId":"132","endLine":31,"endColumn":23},{"ruleId":"130","severity":2,"message":"144","line":34,"column":9,"nodeType":"127","messageId":"132","endLine":34,"endColumn":21},{"ruleId":"130","severity":2,"message":"145","line":35,"column":9,"nodeType":"127","messageId":"132","endLine":35,"endColumn":20},{"ruleId":"130","severity":2,"message":"146","line":36,"column":9,"nodeType":"127","messageId":"132","endLine":36,"endColumn":22},{"ruleId":"130","severity":2,"message":"141","line":29,"column":13,"nodeType":"127","messageId":"132","endLine":29,"endColumn":22},{"ruleId":"130","severity":2,"message":"142","line":30,"column":13,"nodeType":"127","messageId":"132","endLine":30,"endColumn":21},{"ruleId":"130","severity":2,"message":"143","line":31,"column":13,"nodeType":"127","messageId":"132","endLine":31,"endColumn":23},{"ruleId":"130","severity":2,"message":"144","line":34,"column":9,"nodeType":"127","messageId":"132","endLine":34,"endColumn":21},{"ruleId":"130","severity":2,"message":"145","line":35,"column":9,"nodeType":"127","messageId":"132","endLine":35,"endColumn":20},{"ruleId":"130","severity":2,"message":"146","line":36,"column":9,"nodeType":"127","messageId":"132","endLine":36,"endColumn":22},{"ruleId":"130","severity":2,"message":"144","line":48,"column":13,"nodeType":"127","messageId":"132","endLine":48,"endColumn":25},{"ruleId":"130","severity":2,"message":"145","line":49,"column":13,"nodeType":"127","messageId":"132","endLine":49,"endColumn":24},{"ruleId":"130","severity":2,"message":"146","line":50,"column":13,"nodeType":"127","messageId":"132","endLine":50,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":53,"column":8,"nodeType":"149","endLine":53,"endColumn":10,"suggestions":"150"},{"ruleId":"121","replacedBy":"151"},{"ruleId":"123","replacedBy":"152"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"153","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":13},{"ruleId":"125","severity":1,"message":"129","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":48,"column":57,"nodeType":"156","messageId":"157","endLine":48,"endColumn":58,"suggestions":"158"},{"ruleId":"154","severity":1,"message":"159","line":48,"column":60,"nodeType":"156","messageId":"157","endLine":48,"endColumn":61,"suggestions":"160"},{"ruleId":"154","severity":1,"message":"161","line":48,"column":63,"nodeType":"156","messageId":"157","endLine":48,"endColumn":64,"suggestions":"162"},{"ruleId":"125","severity":1,"message":"137","line":57,"column":13,"nodeType":"127","messageId":"128","endLine":57,"endColumn":24},{"ruleId":"125","severity":1,"message":"138","line":58,"column":11,"nodeType":"127","messageId":"128","endLine":58,"endColumn":18},{"ruleId":"121","replacedBy":"163"},{"ruleId":"123","replacedBy":"164"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"165","line":1,"column":26,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"166","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":20},{"ruleId":"125","severity":1,"message":"167","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"153","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":13},{"ruleId":"125","severity":1,"message":"129","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":19},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ErrorNotice' is defined but never used.","no-undef","'setUserData' is not defined.","undef","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'setError' is not defined.","'setUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'message' is assigned a value but never used.","'changeOnClick' is assigned a value but never used.","'blogTitle' is not defined.","'blogText' is not defined.","'authorName' is not defined.","'setBlogTitle' is not defined.","'setBlogText' is not defined.","'setAuthorName' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["170"],["168"],["169"],"'Axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["171","172"],"Unnecessary escape character: \\^.",["173","174"],"Unnecessary escape character: \\*.",["175","176"],["168"],["169"],"'useContext' is defined but never used.","'useHistory' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},{"messageId":"179","fix":"187","desc":"181"},{"messageId":"182","fix":"188","desc":"184"},"Update the dependencies array to be: [props.match.params.id]",{"range":"189","text":"190"},"removeEscape",{"range":"191","text":"192"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"193","text":"194"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"195","text":"192"},{"range":"196","text":"194"},{"range":"197","text":"192"},{"range":"198","text":"194"},[1456,1458],"[props.match.params.id]",[1284,1285],"",[1284,1284],"\\",[1287,1288],[1287,1287],[1290,1291],[1290,1290]]