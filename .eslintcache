[{"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\App.js":"1","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\index.js":"2","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Register.js":"3","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Posts.js":"4","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\CreatePost.js":"5","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Post.js":"6","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\EditPost.js":"7","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\context\\UserContext.js":"8","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Login.js":"9","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\ErrorNotice.js":"10","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\ForgotPassword.js":"11","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\layouts\\Header.js":"12","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\AuthOptions.js":"13","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\layouts\\Footer.js":"14","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\AdminLogin.js":"15"},{"size":2688,"mtime":1607859779739,"results":"16","hashOfConfig":"17"},{"size":175,"mtime":1606603409617,"results":"18","hashOfConfig":"17"},{"size":2797,"mtime":1607848374795,"results":"19","hashOfConfig":"17"},{"size":1881,"mtime":1607861849166,"results":"20","hashOfConfig":"17"},{"size":2910,"mtime":1607860978828,"results":"21","hashOfConfig":"17"},{"size":1100,"mtime":1607856723178,"results":"22","hashOfConfig":"17"},{"size":2762,"mtime":1607862164201,"results":"23","hashOfConfig":"17"},{"size":77,"mtime":1607719270308,"results":"24","hashOfConfig":"17"},{"size":2719,"mtime":1607804972653,"results":"25","hashOfConfig":"17"},{"size":270,"mtime":1606928392996,"results":"26","hashOfConfig":"17"},{"size":1418,"mtime":1607762612970,"results":"27","hashOfConfig":"17"},{"size":422,"mtime":1607805369488,"results":"28","hashOfConfig":"17"},{"size":2143,"mtime":1607859852907,"results":"29","hashOfConfig":"17"},{"size":154,"mtime":1607715404940,"results":"30","hashOfConfig":"17"},{"size":1825,"mtime":1607788657019,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"9pda4s",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\App.js",["69","70","71","72","73","74","75","76"],"import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./layouts/Header\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport Footer from \"./layouts/Footer\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport CreatePost from \"./components/CreatePost\";\nimport EditPost from \"./components/EditPost\";\nimport UserContext from \"./context/UserContext\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport AdminLogin from \"./components/AdminLogin\";\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n  \n      const tokenRes = await Axios.post(\n        \"http://localhost:8080/api/tokenIsValid\", \n        null, \n        { headers: {\"x-auth-token\": token } }\n        );\n        if (tokenRes.data) {\n          const userRes = await Axios.get(\"http://localhost:8080/api/\", {\n            headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n        }\n    };\n  \n    checkLoggedIn();\n  }, []);\n  \n\n  useEffect(() => {\n    Axios\n    .get('http://localhost:8080/api/posts')\n    .then(res => setPosts(res.data))\n    .catch(error => console.log(error));\n  })\n\n  return (\n    \n      <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\"  exact render={() => <Posts posts={posts} />} />\n          <Route exact path=\"/post/:id\" exact render={(props) => <Post {...props}  posts={posts} />} />\n          <Route exact path=\"/admin-login\" exact component={AdminLogin} />\n          <Route exact path=\"/register\" exact component={Register} />\n          <Route exact path=\"/login\" exact component={Login} />\n          <Route exact path=\"/forgot-password\" exact component={ForgotPassword} />\n          \n          <Route exact path=\"/create-post\" exact component={CreatePost} />\n          { userData.user ? (\n            \n            <Route exact path=\"/edit-post/:id\" exact render={(props) => <EditPost {...props}  posts={posts} />} />\n        ) : (\n            <>\n\n            </>\n        )} \n        </Switch>\n        <Footer />\n        </UserContext.Provider>\n      </Router>\n  \n  );\n}\n\nexport default App;\n",["77","78"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\index.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Register.js",["79","80","81"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n    text: undefined,\r\n    });\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        const newUser = { username, email, password };\r\n        await Axios.post(\"http://localhost:8080/api/register\", newUser);\r\n\r\n        setVerifyMessage({\r\n        text: \"Please verify your email to proceed login.\",\r\n        });\r\n    } catch (err) {\r\n        err.response.data.msg && setError(err.response.data.msg);\r\n    }}\r\n\r\n    return (\r\n    <div className=\"register-page\">\r\n        <h2>Register</h2>\r\n        <h3>{verifyMessage.text}</h3>\r\n        <h4>\r\n        {error && (\r\n            <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n        )}\r\n        </h4>\r\n\r\n<form className=\"register-form\" onSubmit={submit} className={classes.root} noValidate autoComplete=\"off\">\r\n<TextField\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Username\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        \r\n      />\r\n\r\n<TextField required id=\"standard-email-input\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          id=\"register-email\"\r\n          onChange={(e) => setEmail(e.target.value)}  \r\n          \r\n        />\r\n<TextField required id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          id=\"register-password\"  \r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        \r\n\r\n\r\n        \r\n <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        Submit\r\n    </Button>\r\n    </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Register;","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Posts.js",["82","83"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\CreatePost.js",["84","85","86","87","88"],"import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\n\r\n\r\nconst CreatePost = () => {\r\n    const [blogTitle, setBlogTitle] = useState(\"\");\r\n    const [blogText, setBlogText] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState();\r\n    \r\n    const { userData, setUserData } = useContext(UserContext); \r\n        \r\n    const authorName = userData.user.username\r\n    const userId = userData.user.id\r\n\r\n\r\n    const changeOnClick = e => {\r\n        \r\n    \r\n        e.preventDefault();\r\n\r\n        try {\r\n        const post = {\r\n            blogTitle,\r\n            blogText,\r\n            userId,\r\n            authorName\r\n        }\r\n\r\n        Axios\r\n            .post(\"http://localhost:8080/api/posts\", post)\r\n            .then(res => setMessage(res.data))\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }}\r\n    \r\n        const useStyles = makeStyles((theme) => ({\r\n            root: {\r\n              '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n              },\r\n            },\r\n          }));\r\n    \r\n        const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"create-post-page\">\r\n            <h1>Create a Blog Post</h1>\r\n            <span className=\"message\">{message}</span>\r\n            <h4>\r\n            {error && (\r\n            <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n            )}\r\n            </h4>\r\n            \r\n            <form id=\"create-post-form\" onSubmit={changeOnClick} encType=\"multipart/form-data\"  className={classes.root} noValidate autoComplete=\"off\">    \r\n        <TextField required id=\"standard-blogTitle-input\"\r\n            label=\"Blog Title\"\r\n            type=\"text\"\r\n            autoComplete=\"current-blogTitle\"\r\n            id=\"blogTitle\"\r\n            onChange={e => setBlogTitle(e.target.value)}\r\n        />\r\n        <TextField required id=\"standard-blogText-input\"\r\n            label=\"Blog Text\"\r\n            type=\"text\"\r\n            autoComplete=\"current-blogText\"\r\n            id=\"blogText\"  \r\n            onChange={e => setBlogText(e.target.value)} \r\n        />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n\r\n\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CreatePost;","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Post.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\EditPost.js",["89","90","91","92","93"],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\context\\UserContext.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\Login.js",["94","95","96","97","98","99","100"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [verifyMessage, setVerifyMessage] = useState({\r\n        text: undefined\r\n    });\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginUser);\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"login-page\">\r\n    <h2>Login</h2>\r\n\r\n    <h3>{verifyMessage.text}</h3>\r\n\r\n    <h4>{error && <ErrorNotice message={error} clearError={() => setError(undefined)} />} </h4>\r\n\r\n\r\n    \r\n<form className=\"register-form\" onSubmit={submit} className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n<TextField required id=\"standard-email-input\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          id=\"register-email\"\r\n          onChange={(e) => setEmail(e.target.value)}  \r\n          \r\n        />\r\n<TextField required id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          id=\"register-password\"  \r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        \r\n\r\n\r\n        \r\n <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        Submit\r\n    </Button>\r\n    </form>\r\n</div>\r\n\r\n)\r\n}\r\nexport default Login;\r\n","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\ForgotPassword.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\layouts\\Header.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\misc\\AuthOptions.js",["101","102","103","104"],"import React, { useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function AuthOptions() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        extendedIcon: {\r\n          marginRight: theme.spacing(1),\r\n        },\r\n      }));\r\n      \r\n    \r\n        const classes = useStyles();\r\n    const { userData, setUserData } = useContext(UserContext); \r\n\r\n    const history = useHistory();\r\n\r\n    const register = () => history.push(\"/register\");\r\n    const login = () => history.push(\"/login\");\r\n    const logout = () => { \r\n        setUserData({\r\n            token: undefined,\r\n            user: undefined\r\n        });\r\n        localStorage.setItem(\"auth-token\", \"\"); \r\n    }\r\n    return (\r\n        <nav className=\"auth-options\" className={classes.root}>\r\n        { userData.user ? (\r\n            <ul className=\"header-ul\">\r\n            <li><Link to=\"/create-post\"><Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.margin}>\r\n                <AddIcon className={classes.extendedIcon} />\r\n                CREATE A POST\r\n                </Fab></Link></li>\r\n            <li><Button variant=\"contained\"  onClick={logout}>Logout </Button></li>  \r\n            </ul>\r\n        ) : (\r\n            <>\r\n            <ul className=\"header-ul\">\r\n                <li><Button variant=\"contained\" color=\"primary\" onClick={register}>\r\n                Register</Button></li>  \r\n                <li><Button variant=\"contained\" color=\"secondary\" onClick={login}>Login</Button></li>\r\n            </ul>\r\n            </>\r\n        )}\r\n\r\n\r\n        </nav>\r\n        \r\n    );\r\n}\r\n","C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\layouts\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\blog-app\\client\\src\\components\\AdminLogin.js",["105"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport ErrorNotice from \"../components/misc/ErrorNotice\";\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    const submit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        try {\r\n        const loginAdmin = { email, password };\r\n        const loginRes = await Axios.post(\r\n            \"http://localhost:8080/api/login\", \r\n                loginAdmin\r\n            );\r\n\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n<div className=\"admin-login-page\">\r\n    <h2>Admin Login</h2>\r\n\r\n    <h4>{error && (\r\n            <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n        )} </h4>\r\n\r\n\r\n    <form className=\"admin-login-form\" onSubmit={submit}>\r\n\r\n        <label htmlFor=\"login-email\">Admin Email</label>\r\n        <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\r\n\r\n        <label htmlFor=\"login-password\">Admin Password</label>\r\n        <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n</div>\r\n)}\r\n\r\n\r\nexport default AdminLogin;\r\n",{"ruleId":"106","severity":1,"message":"107","line":65,"column":34,"nodeType":"108","endLine":65,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":66,"column":41,"nodeType":"108","endLine":66,"endColumn":46},{"ruleId":"106","severity":1,"message":"107","line":67,"column":44,"nodeType":"108","endLine":67,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":68,"column":41,"nodeType":"108","endLine":68,"endColumn":46},{"ruleId":"106","severity":1,"message":"107","line":69,"column":38,"nodeType":"108","endLine":69,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":70,"column":48,"nodeType":"108","endLine":70,"endColumn":53},{"ruleId":"106","severity":1,"message":"107","line":72,"column":44,"nodeType":"108","endLine":72,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":75,"column":48,"nodeType":"108","endLine":75,"endColumn":53},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"106","severity":1,"message":"107","line":57,"column":51,"nodeType":"108","endLine":57,"endColumn":75},{"ruleId":"106","severity":1,"message":"107","line":77,"column":11,"nodeType":"108","endLine":77,"endColumn":30},{"ruleId":"106","severity":1,"message":"107","line":85,"column":11,"nodeType":"108","endLine":85,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":12,"column":23,"nodeType":"115","messageId":"116","endLine":12,"endColumn":34},{"ruleId":"113","severity":1,"message":"117","line":14,"column":11,"nodeType":"115","messageId":"116","endLine":14,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":22},{"ruleId":"113","severity":1,"message":"119","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":21,"column":23,"nodeType":"115","messageId":"116","endLine":21,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":79,"column":13,"nodeType":"108","endLine":79,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":86,"column":13,"nodeType":"108","endLine":86,"endColumn":26},{"ruleId":"113","severity":1,"message":"120","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"121","line":1,"column":37,"nodeType":"115","messageId":"116","endLine":1,"endColumn":47},{"ruleId":"113","severity":1,"message":"117","line":19,"column":11,"nodeType":"115","messageId":"116","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":79,"column":13,"nodeType":"108","endLine":79,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":86,"column":13,"nodeType":"108","endLine":86,"endColumn":26},{"ruleId":"113","severity":1,"message":"122","line":2,"column":22,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},{"ruleId":"113","severity":1,"message":"118","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":22},{"ruleId":"113","severity":1,"message":"119","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":21},{"ruleId":"113","severity":1,"message":"123","line":20,"column":27,"nodeType":"115","messageId":"116","endLine":20,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":73,"column":51,"nodeType":"108","endLine":73,"endColumn":75},{"ruleId":"106","severity":1,"message":"107","line":79,"column":11,"nodeType":"108","endLine":79,"endColumn":30},{"ruleId":"106","severity":1,"message":"107","line":87,"column":11,"nodeType":"108","endLine":87,"endColumn":33},{"ruleId":"113","severity":1,"message":"124","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":16},{"ruleId":"113","severity":1,"message":"125","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":20},{"ruleId":"113","severity":1,"message":"126","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":42,"column":39,"nodeType":"108","endLine":42,"endColumn":63},{"ruleId":"113","severity":1,"message":"122","line":2,"column":22,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'InputAdornment' is defined but never used.","'AccountCircle' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'setVerifyMessage' is assigned a value but never used.","'EditIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'NavigationIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]